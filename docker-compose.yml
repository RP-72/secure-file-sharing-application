version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: docker/backend/Dockerfile
    volumes:
      - ./backend:/app/backend
      - static_volume:/app/backend/static
      - media_volume:/app/backend/media
      - sqlite_data:/data 
    env_file:
      - .env
    ports:
      - "8000:8000"

  nginx:
    build:
      context: ./docker/nginx
      dockerfile: Dockerfile
    volumes:
      - static_volume:/app/backend/static
      - media_volume:/app/backend/media
      - ./docker/nginx/certs:/etc/nginx/certs:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend

  kms:
    build:
      context: .
      dockerfile: docker/kms/Dockerfile
    volumes:
      - ./kms:/app/kms
      - kms_data:/data
    environment:
      - KMS_MASTER_KEY=${KMS_MASTER_KEY}
      - DATABASE_URL=postgresql://${KMS_DB_USER}:${KMS_DB_PASSWORD}@kms-db:5432/${KMS_DB_NAME}
      - KMS_DB_USER=${KMS_DB_USER}
      - KMS_DB_PASSWORD=${KMS_DB_PASSWORD}
      - KMS_DB_NAME=${KMS_DB_NAME}
      - POSTGRES_PASSWORD=${KMS_DB_PASSWORD}
    ports:
      - "5001:5001"
    depends_on:
      - kms-db
    networks:
      - internal_network

  kms-db:
    image: postgres:13-alpine
    environment:
      - POSTGRES_DB=${KMS_DB_NAME}
      - POSTGRES_USER=${KMS_DB_USER}
      - POSTGRES_PASSWORD=${KMS_DB_PASSWORD}
    volumes:
      - kms_db_data:/var/lib/postgresql/data
    networks:
      - internal_network

volumes:
  static_volume:
  media_volume:
  sqlite_data:
  kms_data:
  kms_db_data:

networks:
  internal_network:
    driver: bridge